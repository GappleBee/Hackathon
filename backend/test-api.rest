# IMPORTANT: You must have the REST client extension installed to send these requests
# If you have the REST client extension installed then to send these requests, you simply just click "Send Request"

# Note: For all the requests that contain the Authorization header, users who haven't signed in can't access them
# The token must be provided in that specific format: Authorization: Token INSERT_TOKEN_HERE
# DO NOT remove or add any spaces to this

# This will give you an idea of exactly what to send to each route, and you will also get to see what the response is from each route

# Register a new user
POST http://127.0.0.1:8000/api/register
Content-Type: application/json

{
    "username": "TestBee",
    "email": "TestBee@example.com",
    "password": "TestPassword"
}

###

# Login with the registered user
POST http://127.0.0.1:8000/api/login
Content-Type: application/json

{
    "username": "TestBee",
    "password": "TestPassword"
}

###

# Logout the user
# Note: Replace the token with the one received from the login or register response
POST http://127.0.0.1:8000/api/logout
Authorization: Token INSERT_TOKEN_HERE

###

# Gets 100 (given by the query page_size=100) posts in reverse chronological order that are the 3rd most recent posts (given by the query page=3)
# You separate these queries with an ampersand symbol (&)
# Note: You can add tone=insertEmotionHere to get all the posts that are also of tone "insertEmotionHere"
GET http://127.0.0.1:8000/api/posts?page=1&page_size=100

###

# Add a post
# Note: Replace the token with the one received from the login or register response
POST http://127.0.0.1:8000/api/posts
Content-Type: application/json
Authorization: Token INSERT_TOKEN_HERE

{
    "title": "Post 1",
    "contents": "This is Post 1's contents",
    "tone": "happy" 
}

###

# Get a singular post
GET http://127.0.0.1:8000/api/posts/1

###

# Add a comment to a post
# Note: Replace the token with the one received from the login or register response
POST http://127.0.0.1:8000/api/posts/1
Content-Type: application/json
Authorization: Token INSERT_TOKEN_HERE

{
    "contents": "This is a comment"
}